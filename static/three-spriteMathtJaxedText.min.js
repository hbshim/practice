// Version 1.0.6 three-spritetext - https://github.com/vasturiano/three-spritetext
// function declaration !function (...) {...}
// (!)function (...) {...} (args) is defining or declaring an anonymous function `(!)function (...) {...}` and then calling it `(args)`. 
!function(t,e){
    "object" == typeof exports && "undefined" != typeof module
    ? 
        module.exports=e(require("three"))
    :
        "function" == typeof define && define.amd
        ?
            // define() and define.amd are from Asynchronous Module Definition (AMD) API ( https://github.com/amdjs/amdjs-api/wiki/AMD )
            define(["three"],e)
        :
            t.SpriteText=e(t.THREE)
}(
    this,
    function(t){
        "use strict";
        
        var e = function(){
            
            function i(t,e){
                for(var n=0;n<e.length;n++){
                    var i=e[n];
                    i.enumerable = i.enumerable || !1,
                    i.configurable = !0,
                    "value" in i && (i.writable =! 0),
                    // The static method Object.defineProperty() defines a new property directly on an object, or modifies an existing property on an object, and returns the object. https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty 
                    Object.defineProperty(t,i.key,i)
                }
            }
            return function(t,e,n){
                // return a && b means "return a if a is falsy, return b if a is truthy". `if (a) return b; else return a;` or `(a) ? true : false`.
                // The logical AND operator, &&, works similarly. If the first object is falsy, it returns that object. If it is truthy, it returns the second object. (from http://nfriedly.com/techblog/2009/06/advanced-javascript-operators-and-truthy-falsy/).
                return e && i(t.prototype,e), n && i(t,n), t
                }
            }()
        ;
        
        var r = window.THREE 
        ? 
            window.THREE
        :
            {
                LinearFilter:t.LinearFilter,
                Sprite:t.Sprite,
                SpriteMaterial:t.SpriteMaterial,
                Texture:t.Texture
            }
        ;
        
        return function(t){
            function o(){
                var t=0 < arguments.length && void 0 !== arguments[0]
                ?
                    arguments[0]
                :
                    ""
                ;

                var e= 1 < arguments.length && void 0!==arguments[1]
                ?
                    arguments[1]
                :
                    10;
                        
                var n=2 < arguments.length && void 0 !== arguments[2]
                ?
                    arguments[2]
                :
                    "rgba(255, 255, 255, 1)"
                ;
                        
                !function(t,e){
                    if (!(t instanceof e)) 
                        throw new TypeError("Cannot call a class as a function")
                } (this,o);
                    
                var i = function(t,e){
                    if (!t) 
                        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return !e || "object" != typeof e && "function" != typeof e
                    ?
                        t
                    :
                        e
                }(
                    this,
                    (o.__proto__||Object.getPrototypeOf(o))
                        .call(this,new r.SpriteMaterial({map:new r.Texture}))
                );
                
                return i._text=t, i._textHeight = e, i._color = n, i._fontFace="Arial",i._fontSize=90, i._canvas = document.createElement("canvas"),i._texture = i.material.map, i._texture.minFilter = r.LinearFilter, i._genCanvas(),i
            }
                
            return function(t,e){
                if ("function" != typeof e && null !== e) 
                    throw new TypeError("Super expression must either be null or a function, not "+typeof e);
                t.prototype = Object.create(
                    e && e.prototype,
                    {constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}
                ),
                
                e && ( Object.setPrototypeOf
                    ?
                        Object.setPrototypeOf(t,e)
                    :
                        t.__proto__=e
                )
            }(o,r.Sprite), 
            e(
                o,
                [
                    {
                        key:"_genCanvas",
                        value:function(){
                            var t=this._canvas;
                            var e=t.getContext("2d");
                            var n="normal "+this.fontSize+"px "+this.fontFace;
                            e.font=n;
                            var i=e.measureText(this.text).width;
                            t.width=i,
                            t.height=this.fontSize,
                            e.font=n,
                            e.fillStyle=this.color,
                            e.textBaseline="bottom",
                            e.fillText(this.text,0,t.height),
                            this._texture.image=t,
                            this._texture.needsUpdate =! 0,
                            this.scale.set(this.textHeight*t.width/t.height,this.textHeight)
                        }
                    },{
                        key:"clone",
                        value:function(){
                            return new this.constructor(this.text,this.textHeight,this.color).copy(this)}
                    },{
                        key:"copy",
                        value:function(t){
                            return r.Sprite.prototype.copy.call(this,t),
                            this.color=t.color,
                            this.fontFace=t.fontFace,
                            this.fontSize=t.fontSize,this
                        }
                    },{
                    key:"text",
                    get:function(){
                        return this._text
                    },
                    set:function(t){
                        this._text = t,this._genCanvas()
                    }
                    },{
                        key:"textHeight",
                        get:function(){
                            return this._textHeight
                    },
                        set:function(t){
                            this._textHeight = t,
                            this._genCanvas()}
                    },{
                        key:"color",
                        get:function(){
                            return this._color
                        },
                        set:function(t){
                            this._color=t,
                            this._genCanvas()
                        }
                    },{
                        key:"fontFace",
                        get:function(){
                            return this._fontFace
                        },
                        set:function(t){
                            this._fontFace=t,
                            this._genCanvas()
                        }
                    },{
                        key:"fontSize",
                        get:function(){
                            return this._fontSize
                        },
                        set:function(t){
                            this._fontSize=t,
                            this._genCanvas()
                        }
                    }
                ]
            ),
            o
        }()
    }
);